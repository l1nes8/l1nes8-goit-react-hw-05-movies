{"version":3,"file":"static/js/773.eb8e8f2f.chunk.js","mappings":"+MA2DA,UAtDa,WAAO,IAAD,IACjB,GAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,0BAAoCP,IA0B/D,OAxBAQ,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,CACdC,OAAQ,MACRC,IAAI,sCAAD,OAAwCX,EAAxC,YACHY,OAAQ,CAAEC,SAAU,SACpBC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAINC,EAAAA,EAAAA,QACWR,GACRS,MAAK,SAAAC,GACJtB,EAAQsB,EAASC,KAAKxB,MACtByB,QAAQC,IAAIH,EAASC,KACtB,IACAG,OAAM,SAAAzB,GACLC,EAASD,GACTuB,QAAQvB,MAAMA,EACf,GACJ,GAAE,CAACE,KAGF,4BACE,SAAC,KAAD,CAAMwB,GAAIpB,EAAaqB,QAAvB,SAAgC,aAChC,wBAAI,qBACH7B,EAAK8B,OAAS,IACb,eAAIC,UAAWC,EAAAA,EAAAA,SAAf,SACGhC,EAAKiC,KAAI,SAAAC,GAAK,OACb,gBAAmBH,UAAWC,EAAAA,EAAAA,SAA9B,WACE,gBACEG,IAAG,yCAAoCD,EAAME,cAC7CC,IAAKH,EAAMI,QAEb,uBAAIJ,EAAMI,QACV,yBAAG,cAAYJ,EAAMK,eANdL,EAAMM,GADF,MAYlBtC,IAAS,uBAAG,6CAGlB,C","sources":["components/cast.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useParams, useLocation, Link } from 'react-router-dom';\nimport css from 'style.module.css';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [error, serError] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? `/movies/${movieId}`);\n\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      url: `https://api.themoviedb.org/3/movie/${movieId}/credits`,\n      params: { language: 'en-US' },\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4MDRmZTdlM2QwYTY5MzA2MzQ4ZTUxN2YyMWM3MGE3OSIsInN1YiI6IjY1Mjk3NjQzMGNiMzM1MTZmNWM4YjEwYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.whmYYKhT_uILl9fMGb9Rclq5CcbbJVNJVKSFUVsEDto',\n      },\n    };\n\n    axios\n      .request(options)\n      .then(response => {\n        setCast(response.data.cast);\n        console.log(response.data);\n      })\n      .catch(error => {\n        serError(error);\n        console.error(error);\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link to={backLinkHref.current}>Go back</Link>\n      <h2>Cast Information</h2>\n      {cast.length > 0 && (\n        <ul className={css.listCast}>\n          {cast.map(actor => (\n            <li key={actor.id} className={css.itemCast}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                alt={actor.name}\n              />\n              <p>{actor.name}</p>\n              <p>Character: {actor.character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n      {error && <p>There was a problem with your request.</p>}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["useState","cast","setCast","error","serError","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","options","method","url","params","language","headers","accept","Authorization","axios","then","response","data","console","log","catch","to","current","length","className","css","map","actor","src","profile_path","alt","name","character","id"],"sourceRoot":""}