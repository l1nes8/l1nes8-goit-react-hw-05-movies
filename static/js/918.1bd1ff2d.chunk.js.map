{"version":3,"file":"static/js/918.1bd1ff2d.chunk.js","mappings":"+MA8EA,UAxEe,WACb,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAuCA,OACE,4BACE,wBAAI,kCACJ,kBAAMC,SARW,SAAAC,GACnBA,EAAMC,iBAjCa,WACnB,IAAMC,EAAU,CACdC,OAAQ,MACRC,IAAK,4CACLC,OAAQ,CACNC,cAAe,QACfC,SAAU,QACVC,KAAM,IACNb,MAAOA,GAETc,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAINC,EAAAA,EAAAA,QACWV,GACRW,MAAK,SAAAC,GACJhB,EAAWgB,EAASC,KAAKlB,SACzBmB,QAAQC,IAAIH,EAASC,KAAKlB,QAC3B,IACAqB,OAAM,SAAAC,GACLH,QAAQG,MAAMA,EACf,GACJ,CAQCC,EACD,EAKiCC,UAAWC,EAAAA,EAAAA,WAAzC,WACE,kBACED,UAAWC,EAAAA,EAAAA,YACXC,KAAK,OACLC,MAAO7B,EACP8B,SAjBkB,SAAAzB,GACxBJ,EAASI,EAAM0B,OAAOF,MACvB,EAgBOG,YAAY,8BACZC,UAAQ,KAEV,mBAAQL,KAAK,SAASF,UAAWC,EAAAA,EAAAA,UAAjC,SAAgD,eAKlD,wBACGzB,EAAQgC,KAAI,SAAAC,GAAK,OAChB,yBACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMxC,GAAYyC,GAAE,kBAAaH,EAAMI,IAAtD,UACE,wBAAKJ,EAAMK,OAASL,EAAMM,UAFrBN,EAAMI,GADC,QAUzB,C","sources":["components/movies.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport css from 'style.module.css';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n\n  const searchMovies = () => {\n    const options = {\n      method: 'GET',\n      url: 'https://api.themoviedb.org/3/search/movie',\n      params: {\n        include_adult: 'false',\n        language: 'en-US',\n        page: '1',\n        query: query,\n      },\n      headers: {\n        accept: 'application/json',\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4MDRmZTdlM2QwYTY5MzA2MzQ4ZTUxN2YyMWM3MGE3OSIsInN1YiI6IjY1Mjk3NjQzMGNiMzM1MTZmNWM4YjEwYiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.whmYYKhT_uILl9fMGb9Rclq5CcbbJVNJVKSFUVsEDto',\n      },\n    };\n\n    axios\n      .request(options)\n      .then(response => {\n        setResults(response.data.results);\n        console.log(response.data.results);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  };\n\n  const handleInputChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    searchMovies();\n  };\n\n  return (\n    <div>\n      <h1>Search for movies by keyword</h1>\n      <form onSubmit={handleSubmit} className={css.formSumbit}>\n        <input\n          className={css.inputSearch}\n          type=\"text\"\n          value={query}\n          onChange={handleInputChange}\n          placeholder=\"write the name of the movie\"\n          required\n        />\n        <button type=\"submit\" className={css.btnSearch}>\n          Search\n        </button>\n      </form>\n\n      <ul>\n        {results.map(movie => (\n          <li key={movie.id}>\n            <Link state={{ from: location }} to={`/movies/${movie.id}`}>\n              <h3>{movie.title || movie.name}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["location","useLocation","useState","query","setQuery","results","setResults","onSubmit","event","preventDefault","options","method","url","params","include_adult","language","page","headers","accept","Authorization","axios","then","response","data","console","log","catch","error","searchMovies","className","css","type","value","onChange","target","placeholder","required","map","movie","state","from","to","id","title","name"],"sourceRoot":""}